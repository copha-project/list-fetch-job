"use strict";

const getHash = (t, type = 'sha1') => {
  return require('crypto').createHash(type).update(t).digest('hex');
};

exports.getStringHash = getHash;

const getFileHash = async (filename, type = 'sha256') => {
  const crypto = require('crypto');

  const fs = require('fs');

  const sum = crypto.createHash(type);
  return new Promise((resolve, reject) => {
    const fileStream = fs.createReadStream(filename);
    fileStream.on('error', function (err) {
      reject(err);
    });
    fileStream.on('data', function (chunk) {
      try {
        sum.update(chunk);
      } catch (ex) {
        reject(ex);
      }
    });
    fileStream.on('end', function () {
      resolve(sum.digest('hex'));
    });
  });
};

exports.getFileHash = getFileHash;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9oYXNoLmpzIl0sIm5hbWVzIjpbImdldEhhc2giLCJ0IiwidHlwZSIsInJlcXVpcmUiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwiZXhwb3J0cyIsImdldFN0cmluZ0hhc2giLCJnZXRGaWxlSGFzaCIsImZpbGVuYW1lIiwiY3J5cHRvIiwiZnMiLCJzdW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZpbGVTdHJlYW0iLCJjcmVhdGVSZWFkU3RyZWFtIiwib24iLCJlcnIiLCJjaHVuayIsImV4Il0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLE9BQU8sR0FBRyxDQUFDQyxDQUFELEVBQUlDLElBQUksR0FBQyxNQUFULEtBQWtCO0FBQzlCLFNBQU9DLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLFVBQWxCLENBQTZCRixJQUE3QixFQUFtQ0csTUFBbkMsQ0FBMENKLENBQTFDLEVBQTZDSyxNQUE3QyxDQUFvRCxLQUFwRCxDQUFQO0FBQ0gsQ0FGRDs7QUFHQUMsT0FBTyxDQUFDQyxhQUFSLEdBQXdCUixPQUF4Qjs7QUFFQSxNQUFNUyxXQUFXLEdBQUcsT0FBT0MsUUFBUCxFQUFnQlIsSUFBSSxHQUFDLFFBQXJCLEtBQWtDO0FBQ3BELFFBQU1TLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsUUFBTVMsRUFBRSxHQUFHVCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxRQUFNVSxHQUFHLEdBQUdGLE1BQU0sQ0FBQ1AsVUFBUCxDQUFrQkYsSUFBbEIsQ0FBWjtBQUNBLFNBQU8sSUFBSVksT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBU0MsTUFBVCxLQUFrQjtBQUNqQyxVQUFNQyxVQUFVLEdBQUdMLEVBQUUsQ0FBQ00sZ0JBQUgsQ0FBb0JSLFFBQXBCLENBQW5CO0FBQ0FPLElBQUFBLFVBQVUsQ0FBQ0UsRUFBWCxDQUFjLE9BQWQsRUFBdUIsVUFBVUMsR0FBVixFQUFlO0FBQ3BDSixNQUFBQSxNQUFNLENBQUNJLEdBQUQsQ0FBTjtBQUNELEtBRkQ7QUFHQUgsSUFBQUEsVUFBVSxDQUFDRSxFQUFYLENBQWMsTUFBZCxFQUFzQixVQUFVRSxLQUFWLEVBQWlCO0FBQ3JDLFVBQUk7QUFDRlIsUUFBQUEsR0FBRyxDQUFDUixNQUFKLENBQVdnQixLQUFYO0FBQ0QsT0FGRCxDQUVFLE9BQU9DLEVBQVAsRUFBVztBQUNYTixRQUFBQSxNQUFNLENBQUNNLEVBQUQsQ0FBTjtBQUNEO0FBQ0YsS0FORDtBQU9BTCxJQUFBQSxVQUFVLENBQUNFLEVBQVgsQ0FBYyxLQUFkLEVBQXFCLFlBQVk7QUFDL0JKLE1BQUFBLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDUCxNQUFKLENBQVcsS0FBWCxDQUFELENBQVA7QUFDRCxLQUZEO0FBR0gsR0FmTSxDQUFQO0FBZ0JELENBcEJEOztBQXFCQUMsT0FBTyxDQUFDRSxXQUFSLEdBQXNCQSxXQUF0QiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldEhhc2ggPSAodCwgdHlwZT0nc2hhMScpPT57XG4gICAgcmV0dXJuIHJlcXVpcmUoJ2NyeXB0bycpLmNyZWF0ZUhhc2godHlwZSkudXBkYXRlKHQpLmRpZ2VzdCgnaGV4Jylcbn1cbmV4cG9ydHMuZ2V0U3RyaW5nSGFzaCA9IGdldEhhc2hcblxuY29uc3QgZ2V0RmlsZUhhc2ggPSBhc3luYyAoZmlsZW5hbWUsdHlwZT0nc2hhMjU2JykgPT4ge1xuICBjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxuICBjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcbiAgY29uc3Qgc3VtID0gY3J5cHRvLmNyZWF0ZUhhc2godHlwZSlcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAgIGNvbnN0IGZpbGVTdHJlYW0gPSBmcy5jcmVhdGVSZWFkU3RyZWFtKGZpbGVuYW1lKVxuICAgICAgZmlsZVN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHJlamVjdChlcnIpXG4gICAgICB9KTtcbiAgICAgIGZpbGVTdHJlYW0ub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBzdW0udXBkYXRlKGNodW5rKVxuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIHJlamVjdChleClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIGZpbGVTdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmVzb2x2ZShzdW0uZGlnZXN0KCdoZXgnKSlcbiAgICAgIH0pXG4gIH0pXG59XG5leHBvcnRzLmdldEZpbGVIYXNoID0gZ2V0RmlsZUhhc2hcbiJdfQ==